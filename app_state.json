// -*- javascript -*-

// Last Modified : Tue Apr 03 19:16:09 IST 2012
//
// Copyright (C) 2011, 2012 Sriram Karra <karra.etc@gmail.com>
//
// Licenced under GPLv3

// The application uses a configuration file called app_state.json to
// keep a track of sync state and other configuration values. In the
// distribution app_state.json will have the same contents as this
// file. However it is updated during every run of the
// application to store the state of your sync.

// While modifying the app_state.json is allowed, ensure the
// application is not running at the time. But remember that the user
// should not *have* to edit the app_state.json file directly.

{
    // When file version changes there should be an option to
    // gracefully sense older config formats and migrate the formats
    // to the latest version. Such infra is not yet implemented FIXME.
    'file_version'    : 2,

    // This prefix is attached to all the Group names, labels
    // etc. that are created on Google, field names in BBDB etc.
    'label_prefix'    : 'asynk',
    'label_separator' : ':',

    // The following two field are required for storing custom
    // properties for outlook contact entries. Custom properties are
    // needed to store the Google Contact ID or BBDB entry ID in
    // Outlook to 'link' them.
    //
    // In future we will keep the gid auto incrementing, with a new
    // gid being consumed for each new folder that is synched from
    // either BBDB or Google to Outlook. This relates to how we try to
    // track each synched folder to a distinct category name in
    // Outlook. This is somewhat complex, and we do not at the moment
    // fully understand categories in Outlook at the moment. So we
    // will stick to a simple - everything from BBDB is recognized as
    // a separate 'group' and stuff from Google is in a different
    // group. That should really be sufficient for now.
    //
    // You definitely don't want to change these values.
    'olsync_guid'     : '{a1271100-ac2e-11e0-bc8b-0025644a821c}',
    'olsync_gid'      : {'gc' : 0x8001,
			 'bb' : 0x8002,
			},

    'sync_state'      :  {
	// the state of sync is for each pair of source types
	// supported by the system. As of version 2 of the config file
	// format we support BBDB, Google and Outlook, and we support
	// two way sync across any pair of sources among them. As a
	// result we have three configs appearing below. By convention
	// the key is a couple of two letter abbrevs reprentig the
	// PIMDBs and written in alphabetical order.

	'gc:ol' : {
	    // These values can be changed
	    'last_sync_start' : "1980-07-28T16:10:58.96+05:30",
	    'last_sync_stop'  : "2012-04-03T19:15:12.96+05:30",

	    // Default direction in which to perform Sync. Values can
	    // be one of ['SYNC1WAY' or 'SYCN2WAY'].
	    'sync_dir'         : "SYNC2WAY",

	    // Direction in which to resolve conflicts if the same
	    // entry is modified both locally and in the google
	    // cloud. Value should be one of the two dbids (in this
	    // instance, either 'gc' or 'ol')
	    'conflict_resolve' : 'ol',

	    'group_ids' : {
		// The Google contact groups containing synched
		// contacts are tracked here with a 'group label :
		// google group id' map, where the google group ID is
		// a URL as used in the google contacts api.
		'gc' : {},

		// In future - an analogous map on the Outlook
		// side. The map will be a label to gid (see above for
		// the olsync_gid field. For now unused.
		'ol' : {},
	    },
	},

	'bb:ol' : {
	    'last_sync_start'  : "1980-07-28T16:10:58.96+05:30",
	    'last_sync_stop'   : "1980-07-18T13:23:12.96+05:30",
	    'sync_dir'         : "SYNC2WAY",
	    'conflict_resolve' : 'ol',
	    'group_ids' : {
		'bb' : {},	// there is no such thing as a BBDB
				// group at the moment... but wth
		'ol' : {},
	    },
	},

	'bb:gc' : {
	    'last_sync_start'  : "1980-07-28T16:10:58.96+05:30",
	    'last_sync_stop'   : "1980-07-18T13:23:12.96+05:30",
	    'sync_dir'         : "SYNC2WAY",
	    'conflict_resolve' : 'bb',
	    'group_ids' : {
		'bb' : {},	// there is no such thing as a BBDB
				// group at the moment... but wth
		'gc' : {},
	    },
	},
    },

    // There could be some db specific configurations that we would
    // like to track. For e.g. for Google Contacts we could cache the
    // default username so it does not have to be specified every
    // time.

    'db_config' : {
	'ol' : {
	    // MS Outlook contact entries contain a lot of crap. The
	    // same information appears multiple times against
	    // different property tags. It is hard to understand which
	    // ones are really needed to keep Outlook working, and
	    // which are dispensible. We could create a copy of every
	    // property but it would bloat up your google contacts of
	    // your BBDB to ridiculous sizes. The following array
	    // lists out the Property Tags that we are really
	    // interested in. Everything else is ignored.
	    // 
	    // ** IMPORTANT ** Email addresses and Instant Messaging
	    // ** IDs are automatically synched and do not have to
	    // ** appear here - for reasons too obscure to go into
	    // ** here.
	    "sync_fields" : [
    		'PR_ENTRYID',                'PR_DEPARTMENT_NAME',
		'PR_GIVEN_NAME',             'PR_SURNAME',
		'PR_DISPLAY_NAME', 	     'PR_PRIMARY_TELEPHONE_NUMBER',
		'PR_DISPLAY_NAME_PREFIX',    'PR_GENERATION',
		'PR_BODY',		     'PR_MOBILE_TELEPHONE_NUMBER',
		'PR_POSTAL_ADDRESS',	     'PR_HOME_TELEPHONE_NUMBER',
		'PR_COMPANY_NAME',	     'PR_HOME2_TELEPHONE_NUMBER',
		'PR_TITLE',		     'PR_BUSINESS_TELEPHONE_NUMBER',
		'PR_BIRTHDAY',		     'PR_BUSINESS2_TELEPHONE_NUMBER',
		'PR_NICKNAME',               'PR_HOME_FAX_NUMBER',
		'PR_GENDER',		     'PR_BUSINESS_FAX_NUMBER',
		'PR_PERSONAL_HOME_PAGE',     'PR_PRIMARY_FAX_NUMBER',
		'PR_BUSINESS_HOME_PAGE',     'PR_WEDDING_ANNIVERSARY',
		'PR_LAST_MODIFICATION_TIME', 'PR_OTHER_TELEPHONE_NUMBER',
		//	'PR_COUNTRY',
		//	'PR_OFFICE_LOCATION',
		//	'PR_STREET_ADDRESS',
		//	'PR_EMAIL_ADDRESS',
		//	'PR_EMAIL_ADDRESS_A',
	    ],

	    // Outlook does not have support for labelled email
	    // addresses.  There is no easy way to identify an email
	    // address as a Work Email, or a Home email, etc.  Other
	    // PIMDBs have such support. If we do not do address this
	    // situation, we will lose information when we sync from
	    // google to outlook and back. In the longer term there is
	    // a plan to store a lot of meta information inside each
	    // record that can be used to reconstruct all the
	    // information even when the sync destination does not
	    // support the classes. But in the interim, here is a work
	    // around. The following config value allows you to
	    // specify full email domains that fall in each of your
	    // buckets. Edit this to your heart's content, and ensure
	    // there are no overlaps - if the same domain appears in
	    // more than one cateogry, the results are, at best,
	    // unspecified. Don't complain to me, ok?

	    "email_domains" : {
		"home" : ['hotmail.com', 'gmail.com',
			  'yahoo.com', 'yahoo.co.uk', 'yahoo.co.in',],
		"work" : [],
		"other" : [],
	    }, // db_config['email_domans']

	}, // db_config['ol']

    }, // 'db_config'

}

// Some debug output I gathered to print out the numeric value
// corresponding to the tag name. Recall that MAPI uses numeric
// property tags in the data store

// DEBUG:root:PR_DISPLAY_NAME                  : 0x3001001f
// DEBUG:root:PR_ENTRYID                       : 0x fff0102
// DEBUG:root:PR_COMMENT                       : 0x3004001f
// DEBUG:root:PR_POSTAL_ADDRESS                : 0x3a15001f
// DEBUG:root:PR_STREET_ADDRESS                : 0x3a29001f
// DEBUG:root:PR_COMPANY_NAME                  : 0x3a16001f
// DEBUG:root:PR_TITLE                         : 0x3a17001f
// DEBUG:root:PR_DEPARTMENT_NAME               : 0x3a18001f
// DEBUG:root:PR_OFFICE_LOCATION               : 0x3a19001f
// DEBUG:root:PR_PRIMARY_TELEPHONE_NUMBER      : 0x3a1a001f
// DEBUG:root:PR_MOBILE_TELEPHONE_NUMBER       : 0x3a1c001f
// DEBUG:root:PR_HOME_TELEPHONE_NUMBER         : 0x3a09001f
// DEBUG:root:PR_BUSINESS_TELEPHONE_NUMBER     : 0x3a08001f
// DEBUG:root:PR_COUNTRY                       : 0x3a26001f
// DEBUG:root:PR_EMAIL_ADDRESS                 : 0x3003001f
// DEBUG:root:PR_EMAIL_ADDRESS_A               : 0x3003001e
