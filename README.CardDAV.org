This file is a README for the 'carddav' branch. This file will be deleted
after this branch is merged with master.

The carddav branch is an experimental branch for a new datastore backend for
CardDAV servers. The idea is with this one can sync BBDB and MS Outlook
contacts to a CardDAV server.

* Status

** Fri Apr 05 15:53:17 IST 2013

   Learnt that UID is required; the URI has nothing to do with the UID (or any
   other field for that matter). Just needs to be unique. The RFC talks about
   this topic.

   Implemented email address support; and spent a lot of time understaning how
   params are encoded by vobject etc.

   Also learnt that the overall field mapping interop situation is a
   mess. vCard 3.0 is the most widely implemented system; and yet there are so
   many basic fields that are not defined. Respect for MS has gone up another
   notch after I found their [MS-OXVCARD.pdf] specification laying out in
   details the field mappings from outlook contact from/to vCard.

   The mapping strategy is to see what Google Contact, Apple Addressbook, and
   MS Outlook mapings look like and support them as applicable. Reading is
   fine, but writing may be a challenge.

** Thu Apr 04 19:21:33 IST 2013

   Able to (a) fetch a vcf file from server (b) parse and extract a few fields
   (like name, suffix etc.) from it, and (c) construct a contact object

   Also able to construct a simple CDContact objet, and then push it to the
   sever.

   That is some pretty good progress... but many things about UID management
   are not clear. For sake of convenience added a get_uid/set_uid pair for
   contact_cd.py, but this is not the right way to go. Need to understand how
   the vCard UID field is used And also figure out how it is to be used in
   synching.

** Thu Apr 04 13:27:53 IST 2013

   Able to read server side addressbook folders, fetch their contents, and
   construct the pimdb/folder/contact objects. Next step is to be able to
   parse the vCard files and construct Contacts objects from fetched contents.

** Tue Apr 02 19:39:42 IST 2013

   Discovered Apple's pretty decent caldavclientlibrary, which has
   webdav/caldav/carddav wrappers. It's going to make it easier to deal with
   the server, and we will at least work with Apple's Calendar server. Hooked
   up this guy with a simple test script and pimdb_cd.py is on its way! Humble
   beginning.

* Timelog

** Summary

#+BEGIN: clocktable :maxlevel 3 :scope file
Clock summary at [2013-04-05 Fri 15:52]

| L | Headline       | Time    |       |      |
|---+----------------+---------+-------+------|
|   | *Total time*   | *16:37* |       |      |
|---+----------------+---------+-------+------|
| 1 | Timelog        | 16:37   |       |      |
| 2 | April          |         | 16:37 |      |
| 3 | April 05, 2013 |         |       | 3:18 |
| 3 | April 04, 2013 |         |       | 5:51 |
| 3 | April 03, 2013 |         |       | 4:03 |
| 3 | April 02, 2013 |         |       | 3:25 |
#+END:

** April

*** April 05, 2013
   CLOCK: [2013-04-05 Fri 13:21]--[2013-04-05 Fri 15:50] =>  2:29
   CLOCK: [2013-04-05 Fri 12:45]--[2013-04-05 Fri 13:18] =>  0:33
   CLOCK: [2013-04-05 Fri 10:09]--[2013-04-05 Fri 10:15] =>  0:06
   CLOCK: [2013-04-05 Fri 06:48]--[2013-04-05 Fri 06:58] =>  0:10

*** April 04, 2013
   CLOCK: [2013-04-04 Thu 22:03]--[2013-04-04 Thu 22:35] =>  0:32
   CLOCK: [2013-04-04 Thu 18:21]--[2013-04-04 Thu 19:20] =>  0:59
   CLOCK: [2013-04-04 Thu 16:32]--[2013-04-04 Thu 17:01] =>  0:29
   CLOCK: [2013-04-04 Thu 14:10]--[2013-04-04 Thu 15:43] =>  1:33
   CLOCK: [2013-04-04 Thu 13:20]--[2013-04-04 Thu 13:25] =>  0:05
   CLOCK: [2013-04-04 Thu 11:28]--[2013-04-04 Thu 12:47] =>  1:19
   CLOCK: [2013-04-04 Thu 07:30]--[2013-04-04 Thu 08:24] =>  0:54

*** April 03, 2013
   CLOCK: [2013-04-03 Wed 18:51]--[2013-04-03 Wed 20:22] =>  1:31
   CLOCK: [2013-04-03 Wed 16:27]--[2013-04-03 Wed 17:36] =>  1:09
   CLOCK: [2013-04-03 Wed 05:29]--[2013-04-03 Wed 06:52] =>  1:23

*** April 02, 2013
   CLOCK: [2013-04-02 Tue 18:41]--[2013-04-02 Tue 19:42] =>  1:01
   CLOCK: [2013-04-02 Tue 17:47]--[2013-04-02 Tue 18:26] =>  0:39
   CLOCK: [2013-04-02 Tue 14:26]--[2013-04-02 Tue 15:21] =>  0:55
   CLOCK: [2013-04-02 Tue 12:58]--[2013-04-02 Tue 13:48] =>  0:50
